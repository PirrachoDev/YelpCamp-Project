ERROR:
Flow:
New Campground/Edit/etc >> RenderLogin (automatic) >> ANY OTHER PAGE >> Manually Login (RenderLogin) >> 
>> ERROR TAKES YOU TO New Campground/Edit/etc

BUG:
Middleware: validateCampground
Description:
When used on the edit campground form and there's a Joi validation error, it takes you to /campgrounds/new
instead of sending you back to the same edit form

ROLES -->> FIXED
controllers/users.js

When registering we're also updating role DB adding the new user to the users array
but when using const role = await Role.find({role: req.user.role})
it does retrieve data, but doesn't allow me to trear role.users as an array since I'm trying
role.users.push(req.users._id)
but when I change to const role = await Role.findById(id) <-- hard coding const id = 'sadasda'
then it all works fine
I think it will have to do with cursos vs actual documents on MongoDB

NEXT STEPS -->> DONE!
1- When editing a user and changing its role, we have to delete the userId
 from the old role and add it to the new role
Work will take place most likely into /controllers/users.js

WORKING FRONT END--->> DONE
 Logic related to delete buttons, I want to use Bootstrap modals becauser they look good, that's 
 why I have to change the approach
 Now I have to go to the edit user page to delete a user, for the params to not get messed up
 thanks to the modals
 It's already functional but it may needs some tweaks

*WORKING FRONT END on /views/campgrounds/index.ejs -->> In progress
*WORKING BACK END on /views/campgrounds/index.ejs -->> DONE
  implementing pagination, it's working, I have to work on the logic for bootstrap pagination at the bottom, 
  work on previous and next behaviour if there is nothing prior nor after the currentPage
  It seems like we will have to implement protection against invalid previous and next buttons on controller level, since
  someone easily can enter an invalid query (?page=0) and return an error.
  but is also recomended to do it at front end level too. Here in front end, what happends if there is only 1 page? bottom page indicators will show
  routing to undefined endpoints. CHECK THIS OUT!
  *What about limit? I mean websites such as Encuentra24 let you choose how many results you want to display

SHOW USER PAGE -->> DONE
*We can take this website Replit example, its profile page looks good enough

BACK END --->> In progress
*Edit Role field only available if Mod or higher. -->> (Front end is DONE) (Back end is DONE)
*Mod cannot edit to be an admin, he can only edit from user to mod and viceversa.
*Admin can make all changes, if there is only 1 admin, this cannot be degraded to mod or user without
 having set other admin first.
what's going on with deleteUser controller???

DELETE CONTROLLER -->> DONE
We will use User.findOneAndDelete, once the user has been deleted it should go to a model middleware like the
 one used on Campground model
I am concerning about chained post middlewares, will that be needed? I mean this is the workflow in my mind:
1- Delete the User
2- Delete all campgrounds owned by that user
3- Delete all reviews on all of the campgrounds deleted... here is where I want to know if I have to setup
 another middleware or will the reviews get deleted by the
    existing middleware into the campground model? :thinkingEmojiGoesHere

USER NEW FIELD -->> DONE
The Delete User logic is making me think, a "campgrounds" property/field on the Users model might be helpful,
 a User may own many campgrounds
but a campground can have only one Owner, each user will have an array of campgrounds, so once the user is
 deleted, we will get a 'doc' returned and
we can use it in the post middleware

DELETE CAMPGROUND-->> Bugs!
Clearing online services like cloudinary is not being done with the current code, check Update Campground
 to learn about it
 